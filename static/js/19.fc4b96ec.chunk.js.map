{"version":3,"file":"static/js/19.fc4b96ec.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/FormLogin/FormLogin.module.css?4b43","components/FormLogin/FormLogin.jsx","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginMain\":\"FormLogin_loginMain__7hJ+w\",\"linkNav\":\"FormLogin_linkNav__cd2-P\",\"H1_Title\":\"FormLogin_H1_Title__PXw9I\",\"password\":\"FormLogin_password__+m633\",\"email\":\"FormLogin_email__hYCr0\",\"remember\":\"FormLogin_remember__nXZFr\",\"divLogin\":\"FormLogin_divLogin__DgYYE\",\"PrivateSwitchBase-input\":\"FormLogin_PrivateSwitchBase-input__3oL-p\"};","import { Link } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { deepPurple, purple } from \"@mui/material/colors\";\nimport css from \"./FormLogin.module.css\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\n\nconst theme = createTheme({\n  palette: {\n    primary: deepPurple,\n    secondary: purple,\n  },\n});\n\nconst StyledLink = styled(Link)`\n  display: block;\n  border-radius: 4px;\n  text-decoration: none;\n  /* color: black; */\n  font-weight: 500;\n`;\n\nconst FormLogin = ({ login }) => {\n  const [rememberMe, setRememberMe] = useState(false);\n\n  const handleRememberMeChange = (event) => {\n    setRememberMe(event.target.checked);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = e.target.elements;\n    // сохранение данных пользователя\n    const userData = {\n      email: email.value,\n      password: password.value,\n    };\n\n    // если отмечен чекбокс \"Remember me\", сохраняем данные пользователя в localStorage\n    if (rememberMe) {\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\n    }\n    // регистрация пользователя\n    login(userData);\n  };\n  return (\n    <div className={css.divLogin}>\n      <main className={css.loginMain}>\n        <h1 className={css.H1_Title}>SignIn</h1>\n        <StyledLink to=\"/\" className={css.linkNav}>\n          Back to home\n        </StyledLink>\n\n        <form onSubmit={handleSubmit} className={css.form}>\n          <TextField\n            className={css.email}\n            type=\"email\"\n            name=\"email\"\n            id=\"outlined-basic-email\"\n            label=\"Email\"\n            variant=\"outlined\"\n            // helperText=\"Some important text\"\n            autoComplete=\"username\"\n            sx={{\n              m: 1,\n              width: \"310px\",\n              margin: \"8px  1px\",\n              \"@media screen and (min-width: 768px)\": {\n                width: \"350px\", // задаем другие паддинги для ширины больше 768px\n              },\n\n              \"@media screen and (min-width: 1440px)\": {\n                width: \"350px\",\n              },\n            }}\n          />\n\n          {/* <label>Password</label> */}\n          <TextField\n            className={css.password}\n            type=\"password\"\n            name=\"password\"\n            id=\"outlined-basic-password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            // helperText=\"Some important text\"\n            autoComplete=\"current-password\"\n            sx={{\n              m: 1,\n              width: \"310px\",\n              margin: \"8px  1px\",\n              \"@media screen and (min-width: 768px)\": {\n                width: \"350px\", // задаем другие паддинги для ширины больше 768px\n              },\n\n              \"@media screen and (min-width: 1440px)\": {\n                width: \"350px\",\n              },\n            }}\n          />\n\n          <div>\n            <FormControlLabel\n              className={css.remember}\n              control={\n                <Checkbox\n                  checked={rememberMe}\n                  onChange={handleRememberMeChange}\n                />\n              }\n              // control={<Checkbox />}\n              label=\"Remember me\"\n            />\n          </div>\n\n          <ThemeProvider theme={theme}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{\n                m: 1,\n\n                margin: \"0\",\n                padding: \"8px 0\",\n                backgroundColor: \"rgb(103, 103, 238)\",\n                width: \"310px\",\n\n                \"@media screen and (min-width: 768px)\": {\n                  width: \"350px\", // задаем другие паддинги для ширины больше 768px\n                },\n\n                \"@media screen and (min-width: 1440px)\": {\n                  width: \"350px\",\n                },\n              }}\n            >\n              LOGIN\n            </Button>\n          </ThemeProvider>\n        </form>\n        <Link to=\"/register\" className={css.linkNav}>\n          Forgot password? Don't have an account? Sign Up\n        </Link>\n      </main>\n    </div>\n  );\n};\n\nexport default FormLogin;\n","import { useDispatch } from \"react-redux\";\n\nimport { loginThunk } from \"redux/auth/auchOperations\";\n\nimport FormLogin from \"../components/FormLogin/FormLogin\";\nimport toast from \"react-hot-toast\";\nconst Login = () => {\n  const dispatch = useDispatch();\n  const login = async (body) => {\n    try {\n      await dispatch(loginThunk(body)).unwrap();\n      toast.success(\"Welcome\", { duration: 3000, position: \"top-right\" });\n    } catch (error) {\n      toast.error(\" Incorrect password\", {\n        duration: 3000,\n        position: \"top-right\",\n      });\n    }\n  };\n\n  return <FormLogin login={login} />;\n};\nexport default Login;\n"],"names":["theme","createTheme","palette","primary","deepPurple","secondary","purple","StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","login","_useState","useState","_useState2","_slicedToArray","rememberMe","setRememberMe","_jsx","className","css","children","_jsxs","to","onSubmit","e","preventDefault","_e$target$elements","target","elements","email","password","userData","value","localStorage","setItem","JSON","stringify","TextField","type","name","id","label","variant","autoComplete","sx","m","width","margin","FormControlLabel","control","Checkbox","checked","onChange","event","ThemeProvider","Button","padding","backgroundColor","dispatch","useDispatch","_asyncToGenerator","_regeneratorRuntime","_callee","body","_context","prev","next","loginThunk","unwrap","toast","duration","position","t0","stop","_x","apply","arguments","FormLogin"],"sourceRoot":""}