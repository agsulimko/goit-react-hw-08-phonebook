{"version":3,"file":"static/js/924.0008914c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/FormContact/ContactForm.module.css?8848","redux/contacts/selectors.js","components/FormContact/ContactForm.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__JWzxf\",\"label\":\"ContactForm_label__wGnku\",\"input\":\"ContactForm_input__7GXSM\",\"btnAdd\":\"ContactForm_btnAdd__yBX4w\"};","export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\n\nexport const selectLoading = state => state.contacts.loading;\n","import { useState } from \"react\";\nimport css from \"./ContactForm.module.css\";\nimport Button from \"@mui/material/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { addContacts } from \"redux/contacts/operations\";\nimport toast from \"react-hot-toast\";\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const { contacts } = useSelector(selectContacts);\n  const handleInputChange = ({ target: { value, name } }) => {\n    if (name === \"name\") setName(value);\n    if (name === \"number\") setNumber(value.trim());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const dataForm = { name: name, number: number };\n    const existingContact = contacts.find(\n      (contact) => contact.name === dataForm.name\n    );\n    if (existingContact) {\n      return toast.error(`${dataForm.name} is already in contacts`, {\n        duration: 1500,\n      });\n    }\n    dispatch(addContacts(dataForm));\n    toast.success(\"Successfully adding a contact!\", { duration: 1500 });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleInputChange}\n          className={css.input}\n        />\n      </label>\n      <label className={css.label}>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter number XXX-XX-XX\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleInputChange}\n          className={css.input}\n        />\n      </label>\n      <Button\n        className={css.btnAdd}\n        type=\"submit\"\n        variant=\"contained\"\n        sx={{\n          m: 1,\n          width: \"400px\",\n          backgroundColor: \"rgb(103, 103, 238)\",\n          margin: 0,\n          marginTop: \"30px\",\n          padding: \"8px 0\",\n        }}\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contact_item__j+P5X\",\"btnClose\":\"Contact_btnClose__xzXz9\",\"nameNumber\":\"Contact_nameNumber__EHVcu\",\"input\":\"Contact_input__luYix\",\"div_input\":\"Contact_div_input__+CAF9\",\"div_button\":\"Contact_div_button__VzZ4T\"};","import { useDispatch } from \"react-redux\";\nimport css from \"./Contact.module.css\";\n\nimport Button from \"@mui/material/Button\";\nimport { deleteContacts, editContacts } from \"redux/contacts/operations\";\nimport { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\n\nconst Contact = ({ contacts }) => {\n  const dispatch = useDispatch();\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [name, setName] = useState(contacts.name || \"\");\n  const [number, setNumber] = useState(contacts.number || \"\");\n\n  const handlEdit = () => {\n    setIsEditMode((prev) => !prev);\n  };\n  const handleDelete = () => {\n    dispatch(deleteContacts(contacts?.id));\n    toast.success(\"Successfully deleted a contact!\", { duration: 1500 });\n  };\n\n  useEffect(() => {\n    if (!isEditMode && (name !== contacts.name || number !== contacts.number)) {\n      dispatch(editContacts({ id: contacts.id, name, number }));\n      toast.success(\"Successfully edit a contact!\", { duration: 1500 });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEditMode, name, number]);\n\n  const handleInputChange = ({ target }) => {\n    if (target.name === \"editName\") {\n      setName(target.value);\n    } else if (target.name === \"editNumber\") {\n      setNumber(target.value);\n    }\n  };\n\n  return (\n    <li className={css.item}>\n      {!isEditMode ? (\n        <div className={css.nameNumber}>\n          <h3 className={css.name}>{contacts.name}</h3>\n          <h3 className={css.number}>{contacts.number}</h3>\n        </div>\n      ) : (\n        <div className={css.div_input}>\n          <input\n            onChange={handleInputChange}\n            type=\"text\"\n            name=\"editName\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            className={css.input}\n          />\n          <input\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"editNumber\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={number}\n            required\n            className={css.input}\n          />\n        </div>\n      )}\n      <div className={css.div_button}>\n        <Button\n          onClick={handlEdit}\n          type=\"button\"\n          variant=\"contained\"\n          className={css.btnClose}\n          sx={{\n            m: 1,\n            width: \"110px\",\n            margin: 0,\n            backgroundColor: \"rgb(103, 103, 238)\",\n            padding: \"8px 0\",\n          }}\n        >\n          {isEditMode ? \"Save\" : \"Edit\"}\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          className={css.btnClose}\n          aria-label=\"Close\"\n          onClick={handleDelete}\n          sx={{\n            m: 1,\n            width: \"110px\",\n            margin: 0,\n            backgroundColor: \"rgb(103, 103, 238)\",\n            padding: \"8px 0\",\n          }}\n        >\n          Delete\n        </Button>\n      </div>\n    </li>\n  );\n};\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import Contact from \"components/Contact/Contact\";\nimport css from \"./ContactList.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectContacts, selectFilter } from \"redux/contacts/selectors\";\n// import toast from \"react-hot-toast\";\n\nconst ContactList = () => {\n  const { contacts } = useSelector(selectContacts);\n  const { filter } = useSelector(selectFilter);\n\n  // const isLoggedIn = useSelector(selectIsLoggedIn);\n  const filteredContacts = (filter, contacts) => {\n    if (!filter) return;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const visibleContacts = filteredContacts(filter, contacts);\n\n  return (\n    <ul className={css.list}>\n      {(visibleContacts ?? contacts).map((contact) => (\n        <Contact contacts={contact} key={contact.id} />\n      ))}\n    </ul>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"labelDiv\":\"Filter_labelDiv__tgJE1\",\"input\":\"Filter_input__N7T3z\"};","import React from \"react\";\n\nimport css from \"./Filter.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { filterContacts } from \"redux/contacts/filterSlice\";\nconst Filter = (e) => {\n  const { filter } = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = (event) => {\n    dispatch(filterContacts(event.target.value));\n  };\n  return (\n    <div className={css.labelDiv}>\n      <label className={css.label}>Find contacts by name</label>\n      <input\n        className={css.input}\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n        name=\"filterQuery\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        placeholder=\"Search contacts...\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"h1\":\"Contacts_h1__0rZux\",\"h2\":\"Contacts_h2__dL9Gb\",\"mainContacts\":\"Contacts_mainContacts__S4NPt\"};","import ContactForm from \"components/FormContact/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport css from \"./Contacts.module.css\";\nimport Loader from \"components/Loader/Loader\";\nimport { selectLoading } from \"redux/contacts/selectors\";\nimport { useSelector } from \"react-redux\";\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectLoading);\n  return (\n    <main className={css.mainContacts}>\n      <div className={css.mainContacts}>\n        <h1 className={css.h1}>Phonebook</h1>\n\n        <ContactForm />\n        <h2 className={css.h2}>Contacts</h2>\n        <Filter />\n\n        {isLoading && <b>{Loader()}</b>}\n      </div>\n      <ContactList />\n    </main>\n  );\n};\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectLoading","loading","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","handleInputChange","_ref","_ref$target","target","value","trim","_jsxs","className","css","onSubmit","e","preventDefault","dataForm","find","contact","toast","concat","duration","addContacts","children","_jsx","type","placeholder","pattern","title","required","onChange","Button","variant","sx","m","width","backgroundColor","margin","marginTop","padding","isEditMode","setIsEditMode","_useState5","_useState6","useEffect","editContacts","id","_ref2","onClick","prev","deleteContacts","visibleContacts","toLowerCase","includes","filteredContacts","map","Contact","event","filterContacts","isLoading","ContactForm","Filter","Loader","ContactList"],"sourceRoot":""}